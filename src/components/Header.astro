---

---

<header
  id="header"
  class="fixed left-0 top-0 px-12 py-4 flex items-center justify-between w-dvw z-[1]"
>
  <div class="text-white font-semibold text-4xl logo animate-down">Spark</div>

  <nav
    class="nav-bar ml-16 hidden lg:flex items-center px-8 py-4 gap-8 bg-white bg-opacity-5 rounded-full font-medium text-sm text-white"
  >
    <a href="#home" class="link">Home</a>
    <a href="#about" class="link">About Us</a>
    <a href="#services" class="link">Services</a>
    <a href="#contact" class="link">Contact Us</a>
    <a href="#testimony" class="link">Testimonials</a>
  </nav>
  <div class="hidden lg:block animate-down">
    <button class="btn-flip" data-back="Now!" data-front="Get a Quote"></button>
  </div>
  <label class="hamburger z-[2] block lg:hidden animate-down" id="menu-btn">
    <input type="checkbox" id="menuBoolean" />
    <svg viewBox="0 0 32 32">
      <path
        class="line line-top-bottom"
        d="M27 10 13 10C10.8 10 9 8.2 9 6 9 3.5 10.8 2 13 2 15.2 2 17 3.8 17 6L17 26C17 28.2 18.8 30 21 30 23.2 30 25 28.2 25 26 25 23.8 23.2 22 21 22L7 22"
      ></path>
      <path class="line" d="M7 16 27 16"></path>
    </svg>
  </label>
  <div
    id="mobile-nav"
    class="fixed top-0 right-[-100%] max-w-[400px] w-[85%] bg-[rgba(0,0,0,0.9)] h-dvh flex px-[75px] py-[100px] flex-col gap-12 transition-[right] ease-in-out duration-700"
  >
    <a href="#home" class="text-white text-[25px] link w-fit mob-link">Home</a>
    <a href="#about" class="text-white text-[25px] link w-fit mob-link"
      >About Us</a
    >
    <a href="#services" class="text-white text-[25px] link w-fit mob-link"
      >Services</a
    >
    <a href="#contact" class="text-white text-[25px] link w-fit mob-link"
      >Contact Us</a
    >
    <a href="#testimony" class="text-white text-[25px] link w-fit mob-link"
      >Testimonials</a
    >
  </div>
</header>

<script>
  import gsap from 'gsap';
  gsap.from('.link', {
    opacity: 0,
    y: -50,
    stagger: 0.3,
    duration: 1.5,
    ease: 'elastic',
  });
  gsap.from('.animate-down', {
    opacity: 0,
    scale: 0.5,
    y: -50,
    stagger: 0.3,
    duration: 1,
  });
  gsap.from('.nav-bar', {
    opacity: 0,
    duration: 0.6,
    delay: 0.6,
  });

  const mobLinks = document.querySelectorAll('.mob-link');
  mobLinks.forEach((mobLink) => {
    console.log();
    mobLink.addEventListener('click', () => {
      document.body.classList.remove('navbar-active');
      document.getElementById('menuBoolean')?.click();
    });
  });
  const menuBtn = document.getElementById('menu-btn');
  const menu: any = document.getElementById('menuBoolean');
  menuBtn?.addEventListener('click', () => {
    if (menu?.checked) {
      document.body.classList.add('navbar-active');
    } else {
      document.body.classList.remove('navbar-active');
    }
  });
  var header = document.getElementById('header');
  var bend = document.getElementById('bend');
  var prevscroll = 0;
  window.addEventListener('scroll', () => {
    const elementPosition = bend?.getBoundingClientRect().top || 0;
    const viewportHeight = window.innerHeight;

    if (elementPosition <= viewportHeight && elementPosition >= 0) {
      header?.classList.remove('white-theme');
    } else {
      if (window.scrollY > 200) header?.classList.add('white-theme');
    }

    let currentscroll = window.pageYOffset;

    if (currentscroll > prevscroll) {
      header?.classList.add('active');
    } else {
      header?.classList.remove('active');
    }
    prevscroll = currentscroll;
  });
</script>

<style is:global>
  body.navbar-active {
    position: fixed;
    #home {
      filter: blur(2px);
    }
    #mobile-nav {
      right: 0;
    }
  }
  .hamburger {
    cursor: pointer;
  }

  .hamburger input {
    display: none;
  }

  .hamburger svg {
    /* The size of the SVG defines the overall size */
    height: 3em;
    /* Define the transition for transforming the SVG */
    transition: transform 600ms cubic-bezier(0.4, 0, 0.2, 1);
  }

  .line {
    fill: none;
    stroke: white;
    stroke-linecap: round;
    stroke-linejoin: round;
    stroke-width: 3;
    /* Define the transition for transforming the Stroke */
    transition:
      stroke-dasharray 600ms cubic-bezier(0.4, 0, 0.2, 1),
      stroke-dashoffset 600ms cubic-bezier(0.4, 0, 0.2, 1);
  }

  .line-top-bottom {
    stroke-dasharray: 12 63;
  }

  .hamburger input:checked + svg {
    transform: rotate(-45deg);
  }

  .hamburger input:checked + svg .line-top-bottom {
    stroke-dasharray: 20 300;
    stroke-dashoffset: -32.42;
  }

  #header {
    transition: top 0.8s ease-in-out;
  }
  .active {
    top: -200px;
  }
  .white-theme {
    background-color: #fff;
    .line {
      stroke: black;
    }
    .logo {
      color: black;
    }
    nav {
      background-color: white;
      .link {
        color: black;
      }
      .link::before {
        background-color: black;
      }
    }
  }
  :root {
    --speed: 0.5s;
    --color-white: #fff;
  }
  .link {
    position: relative;
  }
  .link::before {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 2px;
    background-color: var(--color-white);
    transform: scaleX(0);
    transform-origin: bottom right;
    transition: transform 0.3s ease-in-out;
  }
  .link:hover::before {
    transform: scaleX(1);
    transform-origin: bottom left;
  }

  .btn-flip {
    opacity: 1;
    outline: 0;
    color: #fff;
    line-height: 40px;
    position: relative;
    text-align: center;
    letter-spacing: 1px;
    display: inline-block;
    text-decoration: none;
    /* text-transform: uppercase; */

    &:hover {
      &:after {
        opacity: 1;
        transform: translateY(0) rotateX(0);
      }

      &:before {
        opacity: 0;
        transform: translateY(50%) rotateX(90deg);
      }
    }

    &:after {
      top: 0;
      left: 0;
      opacity: 0;
      width: 100%;
      color: #323237;
      display: block;
      transition: var(--speed);
      position: absolute;
      background: #adadaf;
      content: attr(data-back);
      transform: translateY(-50%) rotateX(90deg);
    }

    &:before {
      top: 0;
      left: 0;
      opacity: 1;
      color: #adadaf;
      display: block;
      padding: 0 30px;
      line-height: 40px;
      transition: var(--speed);
      position: relative;
      background: #323237;
      content: attr(data-front);
      transform: translateY(0) rotateX(0);
    }
  }
</style>
